Traceback (most recent call last):
  File "C:\Users\jqbon\anaconda3\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
    ~~~~~~~~~^
        nb,
        ^^^
    ...<4 lines>...
        **kwargs,
        ^^^^^^^^^
    )
    ^
  File "C:\Users\jqbon\anaconda3\Lib\site-packages\nbclient\client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\jqbon\anaconda3\Lib\site-packages\jupyter_core\utils\__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\jqbon\anaconda3\Lib\asyncio\base_events.py", line 725, in run_until_complete
    return future.result()
           ~~~~~~~~~~~~~^^
  File "C:\Users\jqbon\anaconda3\Lib\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
        cell, index, execution_count=self.code_cells_executed + 1
    )
  File "C:\Users\jqbon\anaconda3\Lib\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\jqbon\anaconda3\Lib\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
answer2 = opt.minimize_scalar(obj2)
W_opt   = answer2.x
print(f'The maximum yield of C is {YIELD(W_opt):0.2f} at a catalyst loading of {W_opt:0.0f}kg')
------------------


[1;31m---------------------------------------------------------------------------[0m
[1;31mValueError[0m                                Traceback (most recent call last)
Cell [1;32mIn[8], line 1[0m
[1;32m----> 1[0m answer2 [38;5;241m=[39m opt[38;5;241m.[39mminimize_scalar(obj2)
[0;32m      2[0m W_opt   [38;5;241m=[39m answer2[38;5;241m.[39mx
[0;32m      3[0m [38;5;28mprint[39m([38;5;124mf[39m[38;5;124m'[39m[38;5;124mThe maximum yield of C is [39m[38;5;132;01m{[39;00mYIELD(W_opt)[38;5;132;01m:[39;00m[38;5;124m0.2f[39m[38;5;132;01m}[39;00m[38;5;124m at a catalyst loading of [39m[38;5;132;01m{[39;00mW_opt[38;5;132;01m:[39;00m[38;5;124m0.0f[39m[38;5;132;01m}[39;00m[38;5;124mkg[39m[38;5;124m'[39m)

File [1;32m~\anaconda3\Lib\site-packages\scipy\optimize\_minimize.py:975[0m, in [0;36mminimize_scalar[1;34m(fun, bracket, bounds, args, method, tol, options)[0m
[0;32m    973[0m     res [38;5;241m=[39m method(fun, args[38;5;241m=[39margs, bracket[38;5;241m=[39mbracket, bounds[38;5;241m=[39mbounds, [38;5;241m*[39m[38;5;241m*[39moptions)
[0;32m    974[0m [38;5;28;01melif[39;00m meth [38;5;241m==[39m [38;5;124m'[39m[38;5;124mbrent[39m[38;5;124m'[39m:
[1;32m--> 975[0m     res [38;5;241m=[39m _recover_from_bracket_error(_minimize_scalar_brent,
[0;32m    976[0m                                       fun, bracket, args, [38;5;241m*[39m[38;5;241m*[39moptions)
[0;32m    977[0m [38;5;28;01melif[39;00m meth [38;5;241m==[39m [38;5;124m'[39m[38;5;124mbounded[39m[38;5;124m'[39m:
[0;32m    978[0m     [38;5;28;01mif[39;00m bounds [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:

File [1;32m~\anaconda3\Lib\site-packages\scipy\optimize\_optimize.py:3098[0m, in [0;36m_recover_from_bracket_error[1;34m(solver, fun, bracket, args, **options)[0m
[0;32m   3079[0m [38;5;28;01mdef[39;00m[38;5;250m [39m[38;5;21m_recover_from_bracket_error[39m(solver, fun, bracket, args, [38;5;241m*[39m[38;5;241m*[39moptions):
[0;32m   3080[0m     [38;5;66;03m# `bracket` was originally written without checking whether the resulting[39;00m
[0;32m   3081[0m     [38;5;66;03m# bracket is valid. `brent` and `golden` built on top of it without[39;00m
[1;32m   (...)[0m
[0;32m   3095[0m     [38;5;66;03m# storing the information needed by `minimize_scalar` in the error object,[39;00m
[0;32m   3096[0m     [38;5;66;03m# and intercepting it here.[39;00m
[0;32m   3097[0m     [38;5;28;01mtry[39;00m:
[1;32m-> 3098[0m         res [38;5;241m=[39m solver(fun, bracket, args, [38;5;241m*[39m[38;5;241m*[39moptions)
[0;32m   3099[0m     [38;5;28;01mexcept[39;00m BracketError [38;5;28;01mas[39;00m e:
[0;32m   3100[0m         msg [38;5;241m=[39m [38;5;28mstr[39m(e)

File [1;32m~\anaconda3\Lib\site-packages\scipy\optimize\_optimize.py:2697[0m, in [0;36m_minimize_scalar_brent[1;34m(func, brack, args, xtol, maxiter, disp, **unknown_options)[0m
[0;32m   2694[0m brent [38;5;241m=[39m Brent(func[38;5;241m=[39mfunc, args[38;5;241m=[39margs, tol[38;5;241m=[39mtol,
[0;32m   2695[0m               full_output[38;5;241m=[39m[38;5;28;01mTrue[39;00m, maxiter[38;5;241m=[39mmaxiter, disp[38;5;241m=[39mdisp)
[0;32m   2696[0m brent[38;5;241m.[39mset_bracket(brack)
[1;32m-> 2697[0m brent[38;5;241m.[39moptimize()
[0;32m   2698[0m x, fval, nit, nfev [38;5;241m=[39m brent[38;5;241m.[39mget_result(full_output[38;5;241m=[39m[38;5;28;01mTrue[39;00m)
[0;32m   2700[0m success [38;5;241m=[39m nit [38;5;241m<[39m maxiter [38;5;129;01mand[39;00m [38;5;129;01mnot[39;00m (np[38;5;241m.[39misnan(x) [38;5;129;01mor[39;00m np[38;5;241m.[39misnan(fval))

File [1;32m~\anaconda3\Lib\site-packages\scipy\optimize\_optimize.py:2462[0m, in [0;36mBrent.optimize[1;34m(self)[0m
[0;32m   2459[0m [38;5;28;01mdef[39;00m[38;5;250m [39m[38;5;21moptimize[39m([38;5;28mself[39m):
[0;32m   2460[0m     [38;5;66;03m# set up for optimization[39;00m
[0;32m   2461[0m     func [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mfunc
[1;32m-> 2462[0m     xa, xb, xc, fa, fb, fc, funcalls [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mget_bracket_info()
[0;32m   2463[0m     _mintol [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_mintol
[0;32m   2464[0m     _cg [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_cg

File [1;32m~\anaconda3\Lib\site-packages\scipy\optimize\_optimize.py:2429[0m, in [0;36mBrent.get_bracket_info[1;34m(self)[0m
[0;32m   2426[0m [38;5;66;03m### BEGIN core bracket_info code ###[39;00m
[0;32m   2427[0m [38;5;66;03m### carefully DOCUMENT any CHANGES in core ##[39;00m
[0;32m   2428[0m [38;5;28;01mif[39;00m brack [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[1;32m-> 2429[0m     xa, xb, xc, fa, fb, fc, funcalls [38;5;241m=[39m bracket(func, args[38;5;241m=[39margs)
[0;32m   2430[0m [38;5;28;01melif[39;00m [38;5;28mlen[39m(brack) [38;5;241m==[39m [38;5;241m2[39m:
[0;32m   2431[0m     xa, xb, xc, fa, fb, fc, funcalls [38;5;241m=[39m bracket(func, xa[38;5;241m=[39mbrack[[38;5;241m0[39m],
[0;32m   2432[0m                                                xb[38;5;241m=[39mbrack[[38;5;241m1[39m], args[38;5;241m=[39margs)

File [1;32m~\anaconda3\Lib\site-packages\scipy\optimize\_optimize.py:3037[0m, in [0;36mbracket[1;34m(func, xa, xb, args, grow_limit, maxiter)[0m
[0;32m   3035[0m [38;5;28;01melif[39;00m (w [38;5;241m-[39m wlim)[38;5;241m*[39m(wlim [38;5;241m-[39m xc) [38;5;241m>[39m[38;5;241m=[39m [38;5;241m0.0[39m:
[0;32m   3036[0m     w [38;5;241m=[39m wlim
[1;32m-> 3037[0m     fw [38;5;241m=[39m func([38;5;241m*[39m((w,) [38;5;241m+[39m args))
[0;32m   3038[0m     funcalls [38;5;241m+[39m[38;5;241m=[39m [38;5;241m1[39m
[0;32m   3039[0m [38;5;28;01melif[39;00m (w [38;5;241m-[39m wlim)[38;5;241m*[39m(xc [38;5;241m-[39m w) [38;5;241m>[39m [38;5;241m0.0[39m:

Cell [1;32mIn[7], line 11[0m, in [0;36m<lambda>[1;34m(W)[0m
[0;32m      5[0m YIELD  [38;5;241m=[39m interp1d(W, YCA)  [38;5;66;03m#This gives me yield as a continuous function of W[39;00m
[0;32m      7[0m [38;5;66;03m##########################################################################################[39;00m
[0;32m      8[0m [38;5;66;03m# Use the interpolating polynomial above to create an objective function obj(W) = -YIELD #[39;00m
[0;32m      9[0m [38;5;66;03m##########################################################################################[39;00m
[1;32m---> 11[0m obj2   [38;5;241m=[39m [38;5;28;01mlambda[39;00m W: YIELD(W)[38;5;241m*[39m[38;5;241m-[39m[38;5;241m1[39m  [38;5;66;03m#I want to minimize negative yield.[39;00m
[0;32m     13[0m [38;5;66;03m##########################################################################################[39;00m
[0;32m     14[0m [38;5;66;03m# Graph the objective function go get a rough idea of optimum mass                       #[39;00m
[0;32m     15[0m [38;5;66;03m##########################################################################################[39;00m
[0;32m     17[0m wset   [38;5;241m=[39m np[38;5;241m.[39mlinspace([38;5;241m0[39m, [38;5;241m1000[39m, [38;5;241m1000[39m)

File [1;32m~\anaconda3\Lib\site-packages\scipy\interpolate\_polyint.py:82[0m, in [0;36m_Interpolator1D.__call__[1;34m(self, x)[0m
[0;32m     61[0m [38;5;250m[39m[38;5;124;03m"""[39;00m
[0;32m     62[0m [38;5;124;03mEvaluate the interpolant[39;00m
[0;32m     63[0m 
[1;32m   (...)[0m
[0;32m     79[0m 
[0;32m     80[0m [38;5;124;03m"""[39;00m
[0;32m     81[0m x, x_shape [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_prepare_x(x)
[1;32m---> 82[0m y [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_evaluate(x)
[0;32m     83[0m [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_finish_y(y, x_shape)

File [1;32m~\anaconda3\Lib\site-packages\scipy\interpolate\_interpolate.py:533[0m, in [0;36minterp1d._evaluate[1;34m(self, x_new)[0m
[0;32m    531[0m y_new [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_call([38;5;28mself[39m, x_new)
[0;32m    532[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28mself[39m[38;5;241m.[39m_extrapolate:
[1;32m--> 533[0m     below_bounds, above_bounds [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_check_bounds(x_new)
[0;32m    534[0m     [38;5;28;01mif[39;00m [38;5;28mlen[39m(y_new) [38;5;241m>[39m [38;5;241m0[39m:
[0;32m    535[0m         [38;5;66;03m# Note fill_value must be broadcast up to the proper size[39;00m
[0;32m    536[0m         [38;5;66;03m# and flattened to work here[39;00m
[0;32m    537[0m         y_new[below_bounds] [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_fill_value_below

File [1;32m~\anaconda3\Lib\site-packages\scipy\interpolate\_interpolate.py:566[0m, in [0;36minterp1d._check_bounds[1;34m(self, x_new)[0m
[0;32m    564[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mbounds_error [38;5;129;01mand[39;00m above_bounds[38;5;241m.[39many():
[0;32m    565[0m     above_bounds_value [38;5;241m=[39m x_new[np[38;5;241m.[39margmax(above_bounds)]
[1;32m--> 566[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124mf[39m[38;5;124m"[39m[38;5;124mA value ([39m[38;5;132;01m{[39;00mabove_bounds_value[38;5;132;01m}[39;00m[38;5;124m) in x_new is above [39m[38;5;124m"[39m
[0;32m    567[0m                      [38;5;124mf[39m[38;5;124m"[39m[38;5;124mthe interpolation range[39m[38;5;124m'[39m[38;5;124ms maximum value ([39m[38;5;132;01m{[39;00m[38;5;28mself[39m[38;5;241m.[39mx[[38;5;241m-[39m[38;5;241m1[39m][38;5;132;01m}[39;00m[38;5;124m).[39m[38;5;124m"[39m)
[0;32m    569[0m [38;5;66;03m# !! Should we emit a warning if some values are out of bounds?[39;00m
[0;32m    570[0m [38;5;66;03m# !! matlab does not.[39;00m
[0;32m    571[0m [38;5;28;01mreturn[39;00m below_bounds, above_bounds

[1;31mValueError[0m: A value (1873.302260594539) in x_new is above the interpolation range's maximum value (1000.0).

